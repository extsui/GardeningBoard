#include "Ht16k33.hpp"
#include "Grass.hpp"
#include "SoftwareI2c.hpp"
#include <string.h>

#include "stm32f3xx_hal.h"

/************************************************************
 *  点灯パターン定義
 ************************************************************/
/**
 * 草LED配置
 * 
 * D3      D5      D7      D9
 *     D4      D6      D8    
 *                           
 * D2    D1         D11   D10
 */

static const uint8_t PATTERN_ALL_ON[][GRASS_LED_NUM] = {
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
};

static const uint8_t PATTERN_ALL_OFF[][GRASS_LED_NUM] = {
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

static const uint8_t PATTERN_LEFT_TO_RIGHT_1[][GRASS_LED_NUM] = {
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

static const uint8_t PATTERN_RIGHT_TO_LEFT_1[][GRASS_LED_NUM] = {
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

static const uint8_t PATTERN_LEFT_TO_RIGHT_3[][GRASS_LED_NUM] = {
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

static const uint8_t PATTERN_RIGHT_TO_LEFT_3[][GRASS_LED_NUM] = {
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, },
  { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, },
  { 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

static const uint8_t PATTERN_BOTH_EDGE_TO_MIDDLE[][GRASS_LED_NUM] = {
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
  { 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, },
  { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, },
  { 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, },
  { 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, },
  { 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

static const uint8_t PATTERN_VIBRATION[][GRASS_LED_NUM] = {
  { 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, },
  { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, },
};

static const uint8_t PATTERN_LEFT_TO_RIGHT_BUFFER[][GRASS_LED_NUM] = {
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
  { 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
  { 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, },
  { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, },
  { 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, },
  { 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, },
  { 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, },
  { 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, },
  { 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, },
  { 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, },
  { 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, },
  { 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, },
  { 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, },
  { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, },
  { 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, },
  { 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, },
  { 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, },
  { 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, },
  { 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, },
  { 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, },
  { 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, },
  { 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
  { 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },

  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, },
  { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, },
  { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, },
  { 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, },
  { 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, },
  { 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, },
  { 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, },
  { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, },
  { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, },
  { 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, },
  { 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, },
  { 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, },
  { 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, },
  { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, },
  { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, },
  { 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, },
  { 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, },
  { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, },
  { 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

static const uint8_t PATTERN_LEFT_TO_RIGHT_NEG[][GRASS_LED_NUM] = {
  { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
  { 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, },
  { 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, },
  { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, },
  { 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, },
  { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
};

static const uint8_t PATTERN_RIGHT_TO_LEFT_NEG[][GRASS_LED_NUM] = {
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, },
  { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, },
  { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, },
  { 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, },
  { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, },
  { 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, },
  { 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, },
  { 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
};

static const uint8_t PATTERN_LEFT_TO_RIGHT_VERTICAL[][GRASS_LED_NUM] = {
  { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

static const uint8_t PATTERN_RIGHT_TO_LEFT_VERTICAL[][GRASS_LED_NUM] = {
  { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, },
  { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
  { 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

/************************************************************
 *  点灯パターン一覧
 ************************************************************/
typedef struct {
  const uint8_t (*pattern)[GRASS_LED_NUM];
  int stepCount;
} GrassPatternRecord;

static const GrassPatternRecord GrassPatternTable[] = {
  { PATTERN_ALL_ON,                     1   },
  { PATTERN_ALL_OFF,                    1   },
  { PATTERN_LEFT_TO_RIGHT_1,            12  },
  { PATTERN_RIGHT_TO_LEFT_1,            12  },
  { PATTERN_LEFT_TO_RIGHT_3,            14  },
  { PATTERN_RIGHT_TO_LEFT_3,            14  },
  { PATTERN_BOTH_EDGE_TO_MIDDLE,        12  },
  { PATTERN_VIBRATION,                  2   },
  { PATTERN_LEFT_TO_RIGHT_BUFFER,       134 },
  { PATTERN_LEFT_TO_RIGHT_NEG,          14  },
  { PATTERN_RIGHT_TO_LEFT_NEG,          14  },
  { PATTERN_LEFT_TO_RIGHT_VERTICAL,     8   },
  { PATTERN_RIGHT_TO_LEFT_VERTICAL,     8   }, 
};

/************************************************************
 *  public
 ************************************************************/
Grass::Grass(SoftwareI2c *dev, uint8_t addr) : Brick(dev, addr)
{
}

Grass::~Grass()
{
}

int Grass::SetPattern(int patternId)
{
	if (patternId >= GRASS_PATTERN_NUM) {
		return -1;
	}

	m_currentPatternId = patternId;
	m_currentStepIndex = 0;
	return 0;
}

void Grass::Next(void)
{
	const int stepCount = GrassPatternTable[m_currentPatternId].stepCount;

	// ループ可能にするためにフレーム数を超えたら先頭フレームに戻す
	m_currentStepIndex = (m_currentStepIndex + 1) % stepCount;
}

void Grass::Update()
{
	uint8_t data[GRASS_LED_NUM/8 + 1];
	Make(data, sizeof(data));
	Ht16k33::SetData(m_dev, m_addr, data, sizeof(data));
}

bool Grass::IsLastStep()
{
	if (m_currentStepIndex == (GrassPatternTable[m_currentPatternId].stepCount - 1)) {
		return true;
	} else {
		return false;
	}
}

void Grass::Test(uint8_t stepInterval)
{
	TestPattern(GRASS_PATTERN_ALL_ON, stepInterval);
	TestPattern(GRASS_PATTERN_ALL_OFF, stepInterval);
	TestPattern(GRASS_PATTERN_LEFT_TO_RIGHT_1, stepInterval);
	TestPattern(GRASS_PATTERN_RIGHT_TO_LEFT_1, stepInterval);
	TestPattern(GRASS_PATTERN_LEFT_TO_RIGHT_3, stepInterval);
	TestPattern(GRASS_PATTERN_RIGHT_TO_LEFT_3, stepInterval);
	TestPattern(GRASS_PATTERN_BOTH_EDGE_TO_MIDDLE, stepInterval);
	TestPattern(GRASS_PATTERN_VIBRATION, stepInterval);
	TestPattern(GRASS_PATTERN_LEFT_TO_RIGHT_BUFFER, stepInterval);
	TestPattern(GRASS_PATTERN_LEFT_TO_RIGHT_NEG, stepInterval);
	TestPattern(GRASS_PATTERN_RIGHT_TO_LEFT_NEG, stepInterval);
	TestPattern(GRASS_PATTERN_LEFT_TO_RIGHT_VERTICAL, stepInterval);
	TestPattern(GRASS_PATTERN_RIGHT_TO_LEFT_VERTICAL, stepInterval);
}

/************************************************************
 *  private
 ************************************************************/
void Grass::Make(uint8_t *outData, int length)
{
	const uint8_t (*pattern)[GRASS_LED_NUM] = GrassPatternTable[m_currentPatternId].pattern;
	const uint8_t *stepData = pattern[m_currentStepIndex];
	memset(outData, 0, length);

	outData[0] |= ((stepData[0] == 1) ? 0x01 : 0);
	outData[0] |= ((stepData[1] == 1) ? 0x02 : 0);
	outData[0] |= ((stepData[2] == 1) ? 0x04 : 0);
	outData[0] |= ((stepData[3] == 1) ? 0x08 : 0);
	outData[0] |= ((stepData[4] == 1) ? 0x10 : 0);
	outData[0] |= ((stepData[5] == 1) ? 0x20 : 0);
	outData[0] |= ((stepData[6] == 1) ? 0x40 : 0);
	outData[0] |= ((stepData[7] == 1) ? 0x80 : 0);

	outData[1] |= ((stepData[8]  == 1) ? 0x01 : 0);
	outData[1] |= ((stepData[9]  == 1) ? 0x02 : 0);
	outData[1] |= ((stepData[10] == 1) ? 0x04 : 0);
}
